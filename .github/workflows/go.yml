name: Go
on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Build Dependencies (Linux)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update && sudo apt-get install -y cmake libtool libc6-dev
          cd /tmp
          git clone https://github.com/lzfse/lzfse.git
          cd lzfse
          mkdir build
          cd build
          cmake ..
          sudo make install
      - name: Build Dependencies (macOS)
        if: matrix.platform == 'macos-latest'
        run: |
          brew install lzfse
      - name: Build Dependencies (Windows)
        if: matrix.platform == 'windows-latest'
        run: |
          git clone https://github.com/lzfse/lzfse.git
          cd lzfse
          mkdir build
          cd build
          cmake -G "Visual Studio 16 2019" -A Win64 ..
          cmake --build . --config Debug

      - name: Get dependencies
        run: |
          go mod download

      - name: Build (Linux)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
          ld -llzfse --verbose
          CGO_ENABLED=1 go build -o build/dist/ipsw -ldflags "-s -w -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppVersion=$(cat VERSION) -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppBuildTime==$(date -u +%Y%m%d)" ./cmd/ipsw
      - name: Build (macOS)
        if: matrix.platform == 'macos-latest'
        run: sudo CGO_ENABLED=1 go build -o build/dist/ipsw -ldflags "-s -w -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppVersion=$(cat VERSION) -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppBuildTime==$(date -u +%Y%m%d)" ./cmd/ipsw
      - name: Build (Windows)
        if: matrix.platform == 'windows-latest'
        run: CGO_ENABLED=1 go build -o build/dist/ipsw -ldflags "-s -w -extldflags '-static' -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppVersion=$(cat VERSION) -X github.com/blacktop/ipsw/cmd/ipsw/cmd.AppBuildTime==$(date -u +%Y%m%d)" ./cmd/ipsw

      - name: Run Help
        run: LD_LIBRARY_PATH=/usr/local/lib build/dist/ipsw --help

      - name: Run Device List
        run: LD_LIBRARY_PATH=/usr/local/lib build/dist/ipsw device list

      - name: Run Extract Remote Kernelcache
        run: LD_LIBRARY_PATH=/usr/local/lib build/dist/ipsw -V download kernel -v 13.2.3 -d iPhone12,3

      - uses: actions/upload-artifact@master
        with:
          name: Releases
          path: build/dist/
